import org.joget.apps.app.service.AppUtil;
import org.joget.apps.form.model.*;
import org.joget.commons.util.LogUtil;
import java.sql.Connection;
import javax.sql.DataSource;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.text.DateFormat;
import java.text.SimpleDateFormat;
import java.util.Date;
// class Section {
        String projectId = "";
        String testSectionName = "";
        String testSectionDescription = "";
        String projectName="";
        String projectCode="";
        public FormRowSet store(Element element, FormRowSet rows, FormData formData) {
                FormRow row = rows.get(0);
                projectId = row.getProperty("projectId");
                projectName = row.getProperty("projectName");
                sectionName = row.getProperty("sectionName");
                testSectionDescription = row.getProperty("testSectionDescription");
                projectCode = row.getProperty("projectCode");
                DateFormat dateFormat = new SimpleDateFormat("yyyy-MM-dd HH:mm:ss.SSS");
                String curDate = dateFormat.format(new Date());
                String createdBy = "#currentUser.username#";
                String createdByName = "#currentUser.fullName#";
                String modifiedBy = "#currentUser.username#";
                String modifiedByName = "#currentUser.fullName#";
                Connection con = null;
                try {
                        // Get data source
                        DataSource ds = (DataSource) AppUtil.getApplicationContext().getBean("setupDataSource");
                        // Establish database connection
                        con = ds.getConnection();
                        if (!con.isClosed()) {
                                // Fetch the last inserted section ID for the given project
                                String query = "SELECT * FROM app_fd_tv_test_section WHERE c_projectId=? ORDER BY dateCreated DESC LIMIT 1";
                                PreparedStatement stmt = con.prepareStatement(query);
                                stmt.setString(1, projectId);
                                ResultSet rs = stmt.executeQuery();
                                int lastsectionId = 0;
                                int nextSectionId=0;
                                String lastsectionIdStr="";
                                if (rs.next()) {
                                        // Extract the last section ID and calculate the next section ID
                                        lastsectionIdStr = rs.getString("c_sectionId");
                                        lastsectionId = Integer.parseInt(lastsectionIdStr.split("-")[2]);
                                }
                                String sectionId="";
                                nextSectionId= lastsectionId+1;
                                String newSectionId = addPrefix(nextSectionId,4);
                                sectionId = projectCode+ "-" +"SID-" + newSectionId;
                                // Insert the new section into the database
                                String insertSql = "INSERT INTO app_fd_tv_test_section (id,dateCreated,dateModified,createdBy,createdByName,modifiedBy,modifiedByName,c_sectionName,c_testSectionDescription,c_sectionId,c_projectId,c_projectName,c_projectCode)" +
                                        "VALUES (?,?,?,?,?,?,?,?,?,?,?,?,?)";
                                PreparedStatement stmtInsert = con.prepareStatement(insertSql);
                                stmtInsert.setString(1, sectionId);
                                stmtInsert.setString(2, curDate);
                                stmtInsert.setString(3, curDate);
                                stmtInsert.setString(4, createdBy);
                                stmtInsert.setString(5, createdByName);
                                stmtInsert.setString(6, modifiedBy);
                                stmtInsert.setString(7, modifiedByName);
                                stmtInsert.setString(8, sectionName);
                                stmtInsert.setString(9, testSectionDescription);
                                stmtInsert.setString(10, sectionId);
                                stmtInsert.setString(11, projectId);
                                stmtInsert.setString(12, projectName);
                                stmtInsert.setString(13, projectCode);
                                stmtInsert.executeUpdate();
                        }
                } catch (Exception ex) {
                        LogUtil.error("Creating New Section", ex, "Error storing using JDBC");
                } finally {
                        // Close the database connection
                        try {
                                if (con != null) {
                                        con.close();
                                }
                        } catch (Exception ex) {
                                LogUtil.error("Creating New Section", ex, "Error closing the JDBC connection");
                        }
                }
                // Return the updated form rows
                return rows;
        }
        // Method to add prefix to a number
        public static String addPrefix(int number, int totalDigits) {
                String numberStr = Integer.toString(number);
                int numZeros = totalDigits - numberStr.length();
                StringBuilder result = new StringBuilder();
                // Append the necessary zeros
                for (int i = 0; i < numZeros; i++) {
                        result.append('0');
                }
                // Append the number
                result.append(numberStr);
                return result.substring(result.length() - totalDigits);
        }
// }
// Create an instance of the Section class and call the store method
        return store(element, rows, formData);
